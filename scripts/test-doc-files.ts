#!/usr/bin/env tsx

import fs from 'fs/promises'
import path from 'path'

async function testDOCFiles() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DOC —Ñ–∞–π–ª–æ–≤')
  console.log('================================')
  console.log(
    '‚ö†Ô∏è  DOC —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Next.js'
  )
  console.log('üìù –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å DOC —Ñ–∞–π–ª—ã –≤ DOCX —Ñ–æ—Ä–º–∞—Ç')
  console.log()

  const testDataDir = path.join(process.cwd(), 'test-data', 'doc')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    await fs.access(testDataDir)
  } catch {
    console.log('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è test-data/doc –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    console.log('üìÅ –°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ DOC —Ñ–∞–π–ª—ã')
    return
  }

  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
  const files = await fs.readdir(testDataDir)
  const docFiles = files.filter((file) => file.toLowerCase().endsWith('.doc'))

  if (docFiles.length === 0) {
    console.log('‚ùå DOC —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ test-data/doc/')
    console.log('üìÅ –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ DOC —Ñ–∞–π–ª—ã –≤ —ç—Ç—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é')
    return
  }

  console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${docFiles.length} DOC —Ñ–∞–π–ª–æ–≤:`)
  docFiles.forEach((file) => console.log(`  - ${file}`))
  console.log()

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
  for (const fileName of docFiles) {
    const filePath = path.join(testDataDir, fileName)
    console.log(`üì§ –§–∞–π–ª: ${fileName}`)

    try {
      // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
      const buffer = await fs.readFile(filePath)
      console.log(`  üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${buffer.length} –±–∞–π—Ç`)

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º DOC —Ñ–∞–π–ª
      const signature = buffer.subarray(0, 8).toString('hex')
      const isValid = signature === 'd0cf11e0a1b11ae1'
      console.log(`  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è: ${isValid ? '–ü–†–û–ô–î–ï–ù–ê' : '–ü–†–û–í–ê–õ–ï–ù–ê'}`)

      if (isValid) {
        console.log(`  ‚ÑπÔ∏è  –§–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –Ω–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞`)
        console.log(`  üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤ DOCX —Ñ–æ—Ä–º–∞—Ç`)
      } else {
        console.log(`  ‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º DOC —Ñ–∞–π–ª–æ–º`)
      }
    } catch (error) {
      console.log(`  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${error.message}`)
    }

    console.log()
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
  console.log('üìä –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:')
  console.log('  ‚úÖ –†–∞–±–æ—Ç–∞—é—Ç: .pdf, .txt, .docx, .fb2, .epub')
  console.log('  ‚ö†Ô∏è  –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω: .doc (–ø—Ä–æ–±–ª–µ–º—ã —Å Next.js)')
  console.log()
  console.log('üîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –¥–ª—è DOC —Ñ–∞–π–ª–æ–≤:')
  console.log('  1. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ DOC –≤ DOCX —á–µ—Ä–µ–∑ Microsoft Word')
  console.log('  2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã')
  console.log('  3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ LibreOffice –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏')
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testDOCFiles().catch(console.error)
